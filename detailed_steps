espace ~
	rails new trailblazer_app -d=postgresql
	cd trailblazer_app

trailblazer_app ~
	vim .ruby-version #2.3.0
	vim .ruby-gemset #trailblazer_app
	cd ..

espace ~
	cd trailblazer_app

trailblazer_app ~
	vim detailed_steps
	updating config/database.yml
	bundle install
	adding gems to GemFile
	bundle install
	rake db:create
	bin/rails g model Catalog name:string total_items:integer total_cost:float avg_cost:float
	bin/rails g model Item name:string description:string price:float catalog_id:integer
	added restiction in migrations
	rake db:migrate
	git init
	git add .
	git commit=================================================================================

	add associations in app/models/catalog.rb and app/models/item.rb
	git commit=================================================================================

	create app/concepts dir
	create app/concepts/catalog dir
	create app/concepts/catalog/operation.rb file
	create app/controllers/catalogs_controller.rb file
	adding routes for catalogs, items
	implementing new and create methods in catalogs_controller, create runs operation
	Defining and implementing Class Create in operation.rb, under Class Catalog
	Creating app/views/catalogs dir
	Creating app/views/catalogs/_form.html.erb
								new.html.erb
								show.html.erb
								show.json.builder
	implementing/copying content for previous views/catalogs/ files
	git commit=================================================================================

	adding comments to app/controllers/catalogs_controller and app/concepts/catalog/operation.rb
	git commit=================================================================================

	creating Class Update in app/concepts/catalog/operation.rb, under class Catalog
	creating method edit in catalogs_controller
	creating method update in catalogs_controller
	creating file edit.html.erb in app/views/catalogs
	git commit=================================================================================

	fixing minor Bug
	git commit=================================================================================

	adding destroy method to catalogs_controller
	adding Destroy class to operation
	add index method to catalogs_controller
	add index.html.erb to app/views/catalogs
	added destroy link in show page
	git commit=================================================================================

	new folder app/concepts/item
	new file app/concepts/item/operation.rb
	new file app/controller/items_controller.rb
	new folder app/views/items
	repeat what we did for catalogs
	*	Added index.json.builder for both catalogs views and items views
	git commit=================================================================================
	
	changed item form so that it accepts float numbers (step: 'any')
	git commit=================================================================================

	adding Validations
		adding file app/concepts/catalog/contract.rb
		adding file app/concepts/item/contract.rb
		using contract validation in catalog and item operations
	More Trailblazer Style
		app/concepts/catalog/operation
			using Model methods: create, find, update
			adding class Show
		Same as above for item/operation file
		app/controllers/catalogs_controller
			using Trailblazer in more actions
			using "form" and "present" trailblazer methods
		Same as above for items_controllers
		app/views/catalogs/_form.html.erb
			changed @catalog to @form to meet trailblazer configuration
		Same as above for app/views/items/_form.html.erb
		app/views/catalogs/edit.html.erb
			link_to 'Show', @form instead of link_to 'Show', @catalog
		app/views/items/edit.html.erb
			link_to 'Show', @form instead of link_to 'Show', @item 
	Fixing Errors
		app/views/items/edit
			changed Title (was Editing Catalog)
			changed Back url to point to items_path instead of catalogs_path
	git commit=================================================================================

	Adding Index trailblazer Class to Catalog and Item
		changes in catalogs/operation and items/operation >> adding Index class
		changes in controllers files >> calling present Catalog/Item::Index
		changes in index.html.rb files: using @model instead @catalogs and @items
	git commit=================================================================================
	
	Adding Callbacks
		added file app/concepts/item/callback.rb
		adding callback setting and dispatch in item operation file
		adding some initializers (file config/initializers/trailblazer.rb)
	git commit=================================================================================
	
	Adding Cells - proof of concept
		added "cells-rails" gem
		removed "cells-slim", "cells-haml" gems
		app/views/catalogs/show.html.erb just displays the notice and calls cell
		Added file app/concepts/catalog/cell.rb
		Added directory app/concepts/catalog/views
		Added file app/concepts/catalog/views/show.erb
	git commit=================================================================================

	Using Trailblazer::Cell
		changed app/concepts/catalog/cell.rb to a module containing class(es)
		Renaming folder app/concepts/catalog/views to /view
		modified cell invocation in app/views/catalogs/show.html.erb
	git commit=================================================================================

	Trailblazer::Cell for Catalog
		Added Class New in app/concepts/catalog/cell.rb
		app/views/catalogs/new.html.erb now calls corresponding cell
		added file app/concepts/catalog/view/new.erb
		added file app/concepts/catalog/view/_form.erb # underscore is used for convenience
		deleted file app/views/catalogs/_form.html.erb

		Added Class Edit in app/concepts/catalog/cell.rb (Inherits from New)
		app/views/catalogs/edit.html.erb now calls corresponding cell
		added file app/concepts/catalog/view/edit.erb

		Added Class Index in app/concepts/catalog/cell.rb
		app/views/catalogs/index.html.erb now calls index cell partially 
				(using collection)
		added file app/concepts/catalog/view/index.erb (renders single catalog item)
	git commit=================================================================================

	Adding Cells for item
		Added file app/concepts/item/cell.rb, containing classes for New, Show,
			Edit, Index, and ItemIndex, and a BasicItemCell class acting as an
			abstract class
		Added folder app/concepts/item/view
			added app/concepts/item/view > _form.erb
			added app/concepts/item/view > edit.erb
			added app/concepts/item/view > index.erb
			added app/concepts/item/view > index_item.erb
			added app/concepts/item/view > new.erb
			added app/concepts/item/view > show.erb
		deleted app/views/items/_form.html.erb file, no use for it
		files app/views/items/[edit,index,new,show].html.erb were modified, they
			now call the cell
	git commit=================================================================================

	Fixing project explosion
		Uninstalled All gems
		Deleted Gemfile.lock
		gem install bundler
		bundle install
		commented include ActionView::Helpers::FormHelper from cell files
		Run correctly???
	git commit=================================================================================

	Adding Users
		added 'devise' to Gemfile
		bundle install
			Installing bcrypt 3.1.11 with native extensions
			Installing orm_adapter 0.5.0
			Installing warden 1.2.6
			Installing responders 2.2.0
			Installing devise 4.1.1
		-> Still running
		rails generate devise:install
			create  config/initializers/devise.rb
			create  config/locales/devise.en.yml
		rails generate devise user
			invoke  active_record
			create    db/migrate/20160628192929_devise_create_users.rb
			create    app/models/user.rb
			invoke    test_unit
			create      test/models/user_test.rb
			create      test/fixtures/users.yml
			insert    app/models/user.rb
			route  devise_for :users (changing config/route.rb)
		rake db:migrate
		rails generate devise:views users
			invoke  Devise::Generators::SharedViewsGenerator
			create    app/views/users/shared
			create    app/views/users/shared/_links.html.erb
			invoke  form_for
			create    app/views/users/confirmations
			create    app/views/users/confirmations/new.html.erb
			create    app/views/users/passwords
			create    app/views/users/passwords/edit.html.erb
			create    app/views/users/passwords/new.html.erb
			create    app/views/users/registrations
			create    app/views/users/registrations/edit.html.erb
			create    app/views/users/registrations/new.html.erb
			create    app/views/users/sessions
			create    app/views/users/sessions/new.html.erb
			create    app/views/users/unlocks
			create    app/views/users/unlocks/new.html.erb
			invoke  erb
			create    app/views/users/mailer
			create    app/views/users/mailer/confirmation_instructions.html.erb
			create    app/views/users/mailer/password_change.html.erb
			create    app/views/users/mailer/reset_password_instructions.html.erb
			create    app/views/users/mailer/unlock_instructions.html.erb
		-> Still running (i think)

	git commit=================================================================================	